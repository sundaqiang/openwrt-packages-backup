name: 提取alpine版cloudreve
on:
  workflow_dispatch:
    inputs:
      update:
        description: 'Forced Updating'
        required: false
        default: 'false'
#  schedule:
#   - cron: 0 0 */1 * *

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get Release Ver
      id: getRelease
      run: |
        RESULT=$(curl -k -s https://hub.docker.com/v2/repositories/cloudreve/cloudreve/tags/?page_size=2)
        VER=$(echo ${RESULT} | jq  '.results[1].name' | sed 's/\"//g')
        echo "::set-output name=ReleaseVer::$VER"
    
    - name: Compare Release Ver
      id: cacheVer
      uses: actions/cache@v2
      with:
        path: .ReleaseVer
        key: Release-${{ steps.getRelease.outputs.ReleaseVer }}

    - name: Save New Release Ver
      if: steps.cacheVer.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getRelease.outputs.ReleaseVer }} | tee .ReleaseVer
    
    - name: extract docker
      if: steps.cacheVer.outputs.cache-hit != 'true' || github.event.inputs.update == 'true'
      uses: shrink/actions-docker-extract@v1
      id: extract
      with:
        image: cloudreve/cloudreve:latest
        path: /cloudreve/cloudreve
        
    - name: strip Cloudreve
      if: steps.cacheVer.outputs.cache-hit != 'true' || github.event.inputs.update == 'true'
      run: strip ${{ steps.extract.outputs.destination }}/cloudreve
      
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.cacheVer.outputs.cache-hit != 'true' || github.event.inputs.update == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Alpine-Cloudreve-${{ steps.getRelease.outputs.ReleaseVer }}
        files: ${{ steps.extract.outputs.destination }}/*
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 7

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: steps.cacheVer.outputs.cache-hit != 'true' || github.event.inputs.update == 'true' && !cancelled()
      with:
        keep_latest: 7
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
